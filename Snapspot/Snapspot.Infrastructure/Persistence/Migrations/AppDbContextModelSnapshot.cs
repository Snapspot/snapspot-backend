// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Snapspot.Infrastructure.Persistence.DBContext;

#nullable disable

namespace Snapspot.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Snapspot.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("beb0807d-671c-4b55-b6da-5cb58a0a0502"),
                            CreatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7800),
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7802)
                        },
                        new
                        {
                            Id = new Guid("f4eb024b-861a-42da-928d-844543199be5"),
                            CreatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7805),
                            IsDeleted = false,
                            Name = "ThirdParty",
                            UpdatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7805)
                        },
                        new
                        {
                            Id = new Guid("f71c97dd-b3f1-46b1-a8ee-528f23b9c681"),
                            CreatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7807),
                            IsDeleted = false,
                            Name = "User",
                            UpdatedAt = new DateTime(2025, 5, 25, 13, 28, 41, 305, DateTimeKind.Utc).AddTicks(7807)
                        });
                });

            modelBuilder.Entity("Snapspot.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvartaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Snapspot.Domain.Entities.User", b =>
                {
                    b.HasOne("Snapspot.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Snapspot.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
